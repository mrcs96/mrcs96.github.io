.especialidades {
    grid-column: col-start 2 / col-end 7;
    grid-row: 9 / 10;
    margin: 15rem 0;

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
    grid-gap: 10rem;

    @media only screen and (max-width: $bp-medium) {
        grid-row: 14 / 15;
    }
}

.especialidade {
    background-color: $color-grey-light-1;

    display: grid;
    grid-template-columns: repeat(2, 1fr); //neste caso as ROWS são implicitas
    grid-row-gap: 3.5rem; //criando espaco entre as ROWS

    //box-shadow: 0 .5rem 2rem rgba($color-secondary, .7);

    &__img {
        width: 100%;
        grid-row: 1 / 2; //aqui especifiquei a ROW por causa do OVERLAP do icone, que antes ficava no canto da imagem
        grid-column: 1 / -1;
        z-index: 1;
    }

   /* &__like {
        grid-row: 1 / 2; //este icone ficara em cima da imagem (OVERLAPPING) ou seja na mesma ROW
        grid-column: 2 / 3;
        justify-self: end;

        fill: $color-primary;
        height: 2.5rem;
        width: 2.5rem;
        z-index: 2;
        margin: 1rem;
    } */

    &__name {
        grid-row: 1 / 2; //utilizando OVERLAP de novo, na mesma ROW e COLUMN da imagem
        grid-column: 1 / -1;
        justify-self: center;
        align-self: end;

        z-index: 3;
        width: 80%;
        font-family: $font-display;
        font-size: 1.8rem;
        text-align: center;
        padding: 1.25rem;
        background-color: $color-secondary;
        color: #fff;
        font-weight: 400;
        transform: translateY(50%); //50% da HEIGHT, vai centralizar para efeito OVERLAP
    }

    &__detalhes {
        margin-top: 2.5rem; //aumentando o espaço entre esses elementos e o NAME acima por conta do OVERLAP
    }

    &__detalhes {
        //display: flex; //usando FLEXBOX para alinhar os elementos, neste caso é uma solução melhor e mais simples
        grid-row: 2 / 3;
        grid-column: 1 / -1;

        font-size: 1.5rem;
        //padding: 2rem;
        text-align: center;

        .heading-3 {
            font-size: 2rem;
            margin-bottom: 4rem;
            margin-top: -3rem;
        }

        .heading-3--italic {
            font-style: italic;
        }

       // p {} não preciso desse seletor porque ele herdara dos elementos PARENT acima
    }

    &__link {
        &:link,
        &:visited {
            grid-column: 1 / -1;
        }
    }
    
    &__btn {
        width: 100%;
    }
}

//GINECOLOGIA

.ginecologia {
    box-shadow: 0 1.5rem 4rem rgba($color-secondary, .7);
    grid-row: 5 / 6;

    &__pictures {
        background-color: $color-primary;
        grid-column: full-start / col-end 4;
        background-image: linear-gradient(rgba($color-primary, .5), rgba($color-primary, .5)), url(../img/ginecologia2.jpg);
        background-size: cover;

        display: grid; //grid-item se tornando um GRID container
        grid-template-rows: repeat(16, 1fr);
        grid-template-columns: repeat(12, 1fr);
        align-items: center;

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 6 / 7;
            //padding: 6rem;
            background: none;
            grid-template-rows: repeat(2, 12rem);
        }
    }

    &__item--1 {
        //width: 100%;
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 2 / span 7;
        grid-column: 2 / span 5;
        z-index: 20;
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .1);

        @media only screen and (max-width: $bp-medium) {
            grid-column: 5 / 9;
            grid-row: 1 / -1;
        }
    }

    &__item--2 {
        //width: 100%; //aumentado para dar um efeito de OVERLAPPING na imagem
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        //grid-row: 3 / span 5;
        //grid-column: 6 / span 6;
        grid-row: 10 / -1;
        grid-column: 1 / span 5;
        //z-index: 20; //para que a imagem fique acima dos outros elementos
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            grid-column: 1 / 5;
        }
    }

    &__item--3 {
        //width: 115%; //aumentado para dar um efeito de OVERLAPPING na imagem
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 11 / span 5;
        grid-column: 5 / -1;
        z-index: 20; //para que a imagem fique acima dos outros elementos
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            grid-column: 9 / -1;
        }
    }

    &__content {
        background-color: $color-grey-light-1;
        grid-column: col-start 5 / full-end;

        padding: 6rem 8vw;
        
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        
        /* Esta parte é ONE DIMENSIONAL por isso utilizo FLEXBOX que é perfeito para isso,
           mas não quer dizer que não posso usar GRID.
        display: grid;
        align-content: center;
        justify-items: start;
        */

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 7 / 8;
        }
    }

    &__text {
        font-size: 1.6rem;
        margin-bottom: 4rem;
        text-align: left;
    }

    &__text-2 {
        font-size: 1.6rem;
        margin-bottom: 1rem;
        text-align: left;
    }

    &__img {
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
    }
}

//OBSTETRICIA

.obstetricia {
    box-shadow: 0 1.5rem 4rem rgba($color-secondary, .7);
    grid-row: 6 / 7;

    &__pictures {
        background-color: $color-primary;
        grid-column: col-start 5 / full-end;
        background-image: linear-gradient(rgba($color-primary, .5), rgba($color-primary, .5)), url(../img/obstetricia.jpg);
        background-size: cover;

        display: grid; //grid-item se tornando um GRID container
        grid-template-rows: repeat(16, 1fr);
        grid-template-columns: repeat(12, 1fr);
        align-items: center;

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 8 / 9;
            //padding: 6rem;
            background: none;
            grid-template-rows: repeat(2, 12rem);
        }
    }

    &__item--1 {
        //width: 100%;
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 1 / span 7;
        grid-column: 1 / span 5;
        z-index: 20;
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .1);

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / 5;
            grid-row: 1 / -1;
        }
    }

    &__item--2 {
        //width: 100%; //aumentado para dar um efeito de OVERLAPPING na imagem
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        //grid-row: 3 / span 5;
        //grid-column: 6 / span 6;
        grid-row: 8 / -1;
        grid-column: 1 / span 5;
        //z-index: 20; //para que a imagem fique acima dos outros elementos
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            grid-column: 5 / 9;
        }
    }

    &__item--3 {
        //width: 115%; //aumentado para dar um efeito de OVERLAPPING na imagem
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 10 / span 5;
        grid-column: 5 / -1;
        z-index: 20; //para que a imagem fique acima dos outros elementos
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            grid-column: 9 / -1;
        }
    }

    &__content {
        background-color: $color-grey-light-1;
        grid-column: full-start / col-end 4; 

        padding: 6rem 8vw;
        
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        
        /* Esta parte é ONE DIMENSIONAL por isso utilizo FLEXBOX que é perfeito para isso,
           mas não quer dizer que não posso usar GRID.
        display: grid;
        align-content: center;
        justify-items: start;
        */

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 9 / 10;
        }
    }

    &__text {
        font-size: 1.6rem;
        margin-bottom: 4rem;
        text-align: left;
    }

    &__text-2 {
        font-size: 1.6rem;
        margin-bottom: 1rem;
        text-align: left;
    }

    &__img {
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
    }
}

//CLINICO GERAL

.clinico {
    box-shadow: 0 1.5rem 4rem rgba($color-secondary, .7);
    grid-row: 7 / 8;

    &__pictures {
        background-color: $color-primary;
        grid-column: full-start / col-end 4;
        //background-image: linear-gradient(rgba($color-primary, .5), rgba($color-primary, .5)), url(../img/recepcao2.jpg);
        //background-size: cover;

        display: grid; //grid-item se tornando um GRID container
        grid-template-rows: repeat(16, 1fr);
        grid-template-columns: repeat(12, 1fr);
        align-items: center;

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 10 / 11;
            //padding: 6rem;
            background: none;
            grid-template-rows: repeat(2, 12rem);
        }
    }

    &__item--1 {
        //width: 100%;
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 1 / span 6;
        grid-column: 1 / -1;
        z-index: 20;
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .1);

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / 5;
            grid-row: 1 / -1;
        }
    }

    &__item--2 {
        //width: 100%; //aumentado para dar um efeito de OVERLAPPING na imagem
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 7 / -1;
        grid-column: 1 / -1;
        //z-index: 20; //para que a imagem fique acima dos outros elementos
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            width: 100%;
        }
    }

    &__content {
        background-color: $color-grey-light-1;
        grid-column: col-start 5 / full-end; 

        padding: 6rem 8vw;
        
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        
        /* Esta parte é ONE DIMENSIONAL por isso utilizo FLEXBOX que é perfeito para isso,
           mas não quer dizer que não posso usar GRID.
        display: grid;
        align-content: center;
        justify-items: start;
        */

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 11 / 12;
        }
    }

    &__text {
        font-size: 1.6rem;
        margin-bottom: 4rem;
        text-align: left;
    }

    &__text-2 {
        font-size: 1.6rem;
        margin-bottom: 1rem;
        text-align: left;
    }

    &__img {
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
    }
}

.ultra {
    box-shadow: 0 1.5rem 4rem rgba($color-secondary, .7);
    grid-row: 8 / 9;

    &__pictures {
        background-color: $color-primary;
        grid-column: col-start 5 / full-end;
        //background-image: linear-gradient(rgba($color-primary, .5), rgba($color-primary, .5)), url(../img/recepcao2.jpg);
        //background-size: cover;

        display: grid; //grid-item se tornando um GRID container
        grid-template-rows: repeat(16, 1fr);
        grid-template-columns: repeat(12, 1fr);
        align-items: center;

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 12 / 13;
            //padding: 6rem;
            background: none;
            grid-template-rows: repeat(2, 12rem);
        }
    }

    &__item--1 {
        //width: 100%;
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 1 / span 8;
        grid-column: 1 / span 6;
        z-index: 20;
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .1);

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / span 3;
            grid-row: 1 / -1;
        }
    }

    &__item--2 {
        //width: 100%; //aumentado para dar um efeito de OVERLAPPING na imagem
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 9 / -1;
        grid-column: 7 / span 6;
        //z-index: 20; //para que a imagem fique acima dos outros elementos
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            grid-column: 4 / span 3;
        }
    }

    &__item--3 {
        //width: 100%; //aumentado para dar um efeito de OVERLAPPING na imagem
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 1 / span 8;
        grid-column: 7 / span 6;
        //z-index: 20; //para que a imagem fique acima dos outros elementos
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            grid-column: 7 / span 3;
        }
    }

    &__item--4 {
        //width: 100%; //aumentado para dar um efeito de OVERLAPPING na imagem
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 9 / -1;
        grid-column: 1 / span 6;
        //z-index: 20; //para que a imagem fique acima dos outros elementos
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            grid-column: 10 / -1;
        }
    }

    &__content {
        background-color: $color-grey-light-1;
        grid-column: full-start / col-end 4; 

        align-self: flex-start;

        padding: 6rem 8vw;
        z-index: 555;

        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        
        /* Esta parte é ONE DIMENSIONAL por isso utilizo FLEXBOX que é perfeito para isso,
           mas não quer dizer que não posso usar GRID.
        display: grid;
        align-content: center;
        justify-items: start;
        */

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 13 / 14;
        }
    }

    &__text {
        font-size: 1.6rem;
        margin-bottom: 4rem;
        text-align: left;
    }

    &__text-2 {
        font-size: 1.6rem;
        margin-bottom: 1rem;
        text-align: left;
    }

    &__img {
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
    }

    .accordion {
        background-color: $color-primary;
        color: $color-grey-light-1;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 1.8rem;
        transition: 0.4s;
      }
      
      .active, .accordion:hover {
        background-color: $color-primary-dark;
      }

      .accordion:after {
        content: '\002B';
        color: $color-grey-light-1;
        font-weight: bold;
        float: right;
        margin-left: 5px;
      }
      
      .active:after {
        content: "\2212";
      }
      
      .panel {
        padding: 0 5rem;
        font-size: 1.6rem;
        z-index: 555;
        background-color: white;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.5s ease-out;

        &__p {
            padding-top: 2.5rem;
            padding-bottom: 2rem;
            font-size: 1.8rem;
        }

        ul {

            li {
                color: $color-primary-dark;
                font-weight: bold;
            }

            .panel__li {
                padding-bottom: 1rem;
            }
        }

        .heading-4 {
            padding-bottom: 2.5rem;
        }
      }
}