.quemsomos {
    //box-shadow: 0 1.5rem 4rem rgba($color-secondary, .7);
    grid-row: 3 / 4;

    margin-top: 15rem;

    &__pictures {
        background-color: $color-primary;
        grid-column: col-start 5 / full-end;
        background-image: linear-gradient(rgba($color-primary, .5), rgba($color-primary, .5)), url(../img/fotosquem-recep.jpg);
        background-size: cover;

        display: grid; //grid-item se tornando um GRID container
        grid-template-rows: repeat(16, 1fr);
        grid-template-columns: repeat(12, 1fr);
        align-items: center;

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 3 / 4;
            //padding: 6rem;
            background: none;
            grid-template-rows: repeat(2, 12rem);
        }
    }

    &__item--1 {
        //width: 100%;
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 3 / span 7;
        grid-column: 1 / -1;
        //z-index: 20;
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .1);

        @media only screen and (min-width: $bp-largest-2) {
            grid-row: 1 / span 7;
        }

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / 7;
            grid-row: 1 / -1;
        }
    }

    &__item--2 {
        //width: 100%; //aumentado para dar um efeito de OVERLAPPING na imagem
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
        grid-row: 8 / -1;
        grid-column: 1 / span 7;
        z-index: 20; //para que a imagem fique acima dos outros elementos
        box-shadow: 0 2rem 5rem rgba(0, 0, 0, .2);

        @media only screen and (min-width: $bp-largest-2) {
            grid-row: 6 / -1;
            grid-column: 1 / span 5;
        }

        @media only screen and (max-width: $bp-medium) {
            grid-row: 1 / -1;
            grid-column: 7 / -1;
        }
    }

    &__content {
        //background-color: $color-grey-light-1;
        grid-column: full-start / col-end 4; 

        padding: 6rem 8vw;
        
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        
        /* Esta parte é ONE DIMENSIONAL por isso utilizo FLEXBOX que é perfeito para isso,
           mas não quer dizer que não posso usar GRID.
        display: grid;
        align-content: center;
        justify-items: start;
        */

        @media only screen and (max-width: $bp-medium) {
            grid-column: 1 / -1;
            grid-row: 4 / 5;
            margin-top: 0;
        }
    }

    &__text {
        font-size: 1.6rem;
        margin-bottom: 4rem;
        text-align: left;
    }

    &__text-2 {
        font-size: 1.6rem;
        margin-bottom: 1rem;
        text-align: left;
    }

    &__img {
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
    }
}

//GALERIA QUEM SOMOS

.fotosquem {
    //background-color: $color-grey-light-1;
    grid-column: full-start / full-end;
    grid-row: 4 / 5;

    margin-bottom: 15rem;

    //background-image: linear-gradient(rgba($color-primary, .5), rgba($color-primary, .5)), url(../img/fotosquem-recep2.jpg);
    //background-size: cover;

    display: grid; //grid item se tornando um GRID CONTAINER
    grid-template-columns: repeat(12, 1fr);
    grid-template-rows: repeat(6, 5vw); //utilizando VW (view-width) para manter o ASPECT RATIO das CELLS do GRID
    //ao diminuir ou aumentar o view-port
    //outra maneira de se fazer isso seria atribuir um HEIGHT para a ROW que contém o GRID CONTAINER, isso faria com que
    //ao usar 1fr todas as CELLS teriam tamanhos iguais dividindo a HEIGHT com o número de ROWS
    //grid-gap: 1.5rem;
    //padding: 1.5rem;
    backface-visibility: hidden;
    overflow: hidden;
    //position: relative;

    @media only screen and (max-width: $bp-medium) {
        grid-row: 5 / 6;
    }

    h1 {
        justify-self: center;
        align-self: center;
        font-size: 2.5rem;
        padding: 2.5rem;
        grid-column: 7 / 12;
        grid-row: 1 / span 2;

        @media only screen and (min-width: $bp-largest-2) {
            font-size: 4rem;
        }

        @media only screen and (max-width: $bp-medium) {
            font-size: 2rem;
        }

        @media only screen and (max-width: $bp-small) {
            font-size: 1.5rem;
        }

        @media only screen and (max-width: $bp-smallest) {
            display: none;
        }
    }

    &__item {
        transition: all ease-in-out .2s;
        box-shadow: 0 1.5rem 4rem rgba($color-secondary, .4);
        //z-index: 10;
        backface-visibility: hidden;
        overflow: hidden;

        &--1 {
            grid-row: 3 / span 4;
            grid-column: 3 / span 8;
        }
        
        &--2 {
            grid-row: 5 / span 2;
            grid-column: 10 / span 2;
        }

        &--3 {
            grid-row: 1 / -1;
            grid-column: 1 / span 3;
        }
        
        &--4 {
            grid-row: 1 / span 3;
            grid-column: 4 / span 3;
        }
    }

    &__img {
        width: 100%;
        height: 100%;
        object-fit: cover; //faz com que a IMG caiba exatamente dentro da CELL, para que funcione é preciso especificar HEIGHT e WIDTH
        display: block;
    }
}